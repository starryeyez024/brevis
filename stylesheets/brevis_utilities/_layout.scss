@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin clearfix-before {
  &::before,
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

/////////////////////////////////////////////////
$content-max-width: 1000px;

@mixin content-max-width ($max-content-width: $content-max-width) {
  max-width: $max-content-width;
  margin: 0 auto;
}

///////////////////////////////////////////////////
// SYMMETRIC (FLUID) GRID
// http://sassmeister.com/gist/9226e7dc2a5f2dc0cef9
////////////////////////////////////////////////////
$sg-cols: 3;
$sg-spacing: 20px;
$sg-offset: null;
$sg-margin-direction: right;
$sg-rows: 4;

@mixin symmetric-grid(
  $cols: $sg-cols,
  $space: $sg-spacing,
  $offset: $sg-offset,
  $margin-direction: $sg-margin-direction,
  $rows: $sg-rows
  ){
  margin-#{$margin-direction}: $space;
  clear: none;
  max-width: 100%;
  $minus-margins: ceil($space * ($cols - 1) / $cols) + 1px;
  @if $margin-direction == "right" {
    float: left;
  }
  @if $margin-direction == "left" {
    float: right;
  }
  @if $offset {
    &:nth-child(#{$offset}) {
      width: 100%;
    }
    &:nth-child(n+#{$offset + 1}) {
      width: calc((100% / #{$cols}) - #{$minus-margins});
    }
    @for $i from 1 through $rows {
      &:nth-child(#{$cols * $i + $offset}) {
        margin-#{$margin-direction}: 0;
      }
      &:nth-child(#{$cols * $i + 1 + $offset}) {
        clear: left;
      }
      &:nth-child(n + #{$i + $offset}) {
        margin-top: $sg-spacing;
      }
    }
  }
  @else {
    width: calc((100% / #{$cols}) - #{$minus-margins});
    @for $i from 1 through $rows {
      &:nth-child(#{$cols * $i}) {
        margin-#{$margin-direction}: 0;
      }
      &:nth-child(#{$cols * $i + 1}) {
        clear: left;
      }
      &:nth-child(n + #{$i * $rows + 1}) {
        margin-top: $sg-spacing;
      }
    }
  }
}

// EXAMPLE
//.view-foobar .views-row {
//  @include breakpoint(500px 700px){
//    @include symmetric-grid(2, 10px);
//  }
//  @include breakpoint(700px 1000px){
//    @include symmetric-grid(3, 10px);
//  }
//  @include breakpoint(1000px){
//    @include symmetric-grid(4, 30px, 1);
//  }
//}


/////////////////////////////////////////////////////////////
// IPE WORKAROUND MIXINS
// Used best with Classy Panel Styles Module
// To make pane styles work with IPE:
// Use in @include panel-pane-with-ipe place of .panel-pane

// GENERAL USE
@mixin panel-pane-with-ipe ($pane-name: "main-layout-pane") {
  .#{$pane-name} {
    @content;
  }
  .panels-ipe-portlet-wrapper {
    @content;
    .#{$pane-name} {
      width: 100% !important;
      margin: 0;
      padding: 0;
    }
  }
}
// APPEND TO SAME CONTAINER
@mixin panel-pane-ipe-compound ($pane-name: "main-layout-pane") {
  &.#{$pane-name} {
    @content;
  }
  &.panels-ipe-portlet-wrapper {
    @content;
    .#{$pane-name} {
      width: 100% !important;
      margin: 0;
      border: 0;
      padding: 0;
    }
  }
}
// NTH CHILD
@mixin panel-pane($nth: null, $pane-name: "main-layout-pane") {
  @if ($nth) {
    .#{$pane-name}:nth-child(#{$nth}),
    .panels-ipe-portlet-wrapper:nth-child(#{$nth}) .#{$pane-name} {
      @content;
    }
  }
  @else {
    .#{$pane-name},
    .panels-ipe-portlet-wrapper .#{$pane-name} {
      @content;
    }
  }
}

//////////////////////////////////////////////////////////////////
// REGION COLUMN LAYOUT MIXINS
// These styles only account for left & right margins between panes
@mixin region-1col (
  $tablet-max-name: false,
  $tablet-max-breakpoint: 600px,
  $tablet-max-width: 450px
  ){
  clear: both;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  @if $tablet-max-name {
    @include breakpoint(max-width $tablet-max-breakpoint) {
      @include panel-pane-ipe-compound {
        &.#{$tablet-max-name} {
          max-width: $tablet-max-width;
        }
      }
    }
  }
}
// SPECIALTY MIXINS
@mixin region-2col-1x3 {
  margin-right: $spacing;
  float: left;
  clear: none;
  max-width: 100%;
  width: calc((100% / 2) - #{$spacing});
  margin-left: 0;
  &:nth-child(n + 2) {
    margin-top: $spacing;
    margin-bottom: 0;
    margin-left: 0;
    clear: right;
    float: right;
  }
  &:nth-child(n + 3) {
     margin-top: 0;
  }
}

@mixin region-2col-60-40 {
  float: left;
  clear: none;
  max-width: 100%;
  width: 60%;
  margin-left: 0%;
  margin-right: 0%;
  &:nth-child(even) {
    width: 40%;
    margin-left: 0%;
    max-width: 300px;
  }
  &:nth-child(3) {
    clear: left;
  }
}


/////////////////////////////////////////////////

@mixin vertical-center(
  $container-height: 300px,
  $inner-name: ".block-inner",
  $inner-width: "80%") {
  height: $container-height;
  text-align: center;
  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
  #{$inner-name} {
    display: inline-block;
    vertical-align: middle;
    width: $inner-width;
    padding: (100% - $inner-width)/2;
  }
}

// Vertical Alignment with Intrinsic ratio which sets the height of the container
// http://sassmeister.com/gist/bbdf3b09d856138b3989
@mixin vertical-center-with-ir (
  $inner-name: ".block-inner",
  $inner-width: 90%,
  $container-height: auto,
  $inner-inner-name: "#{$inner-name}-inner" ){
  #{$inner-name} {
    height: 100%;
    display: inline-block;
    vertical-align: middle;
    width: $inner-width;
    position: absolute !important;
    top: 0;
    left: (100% - $inner-width) / 2;
    &:before {
      content: '';
      display: inline-block;
      height: 100%;
      width: 0;
      font-size: 0;
      vertical-align: middle;
    }
  }
  #{$inner-name}-inner {
    display: inline-block;
    vertical-align: middle;
    width: 98%;
    text-align: center;
  }
}

//this allows you to change out the container and internal name.

@mixin vertical-center-with-ir-flex (
  $inner-name: ".block-inner",
  $inner-inner:".block-inner",
  $inner-width: 80%,
  $container-height: auto)
  {
  #{$inner-name} {
    height: 100%;
    display: inline-block;
    vertical-align: middle;
    width: $inner-width;
    position: absolute;
    top: 0;
    left: (100% - $inner-width) / 2;
    &:before {
      content: '';
      display: inline-block;
      height: 100%;
      width: 0;
      font-size: 0;
      vertical-align: middle;
    }
  }
  #{$inner-inner} {
    display: inline-block;
    vertical-align: middle;
    width: 98%;
  }
}

@mixin equal-height{
  .region-inner{
    display: flex;
    flex-wrap: wrap;
  }
}
